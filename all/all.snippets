
#-- SNIPPET GLOBALS --------------------------------------------------
global !p
from SnippetHelpers import (commentSymbol, titlePadding)

endglobal



#-- FILENAMES --------------------------------------------------------
snippet filename "Complete path to current file" b
`!p snip.rv=snip.fn`
endsnippet

snippet basename "Complete path to current file" b
`!p snip.rv=snip.basename`
endsnippet

#-- Python Snippets ---------------------------------------
snippet py "Python script" i
`!p snip.rv='\`!p snip.rv='`$0\`
endsnippet

snippet pym "Python script match.group($1)" i
`!p snip.rv='\`!p snip.rv=match.group'`(${1:1})\`
endsnippet


#-- SECTIONS ---------------------------------------------------------
#---------------------------------------------------------- Headers --
snippet head "Header" b
`!p snip.rv=commentSymbol(snip)`-- ${1:`!p t[1]=t[1].title()`} `!p titlePadding(t[1], snip)`
endsnippet

snippet head.f "Header with fold marker" b
`!p snip.rv=commentSymbol(snip)`-- ${1:`!p t[1]=t[1].title()`} `!p titlePadding(t[1], snip, 'm')`{{{
${0:${VISUAL}}

`!p snip.rv=commentSymbol(snip)` }}}
endsnippet


#------------------------------------------------------ Sub-Headers --
snippet sub "Subheader" b
`!p snip.rv=commentSymbol(snip)``!p titlePadding(t[1], snip)` ${1:`!p t[1]=t[1].title()`} --
endsnippet

snippet sub.gi "Subheader - Global Imports" b
`!p snip.rv=commentSymbol(snip)`--------------------------------------- Global Imports --
endsnippet

snippet sub.f "Subheader with fold marker" b
`!p snip.rv=commentSymbol(snip)`-- ${1:`!p t[1]=t[1].title()`} `!p titlePadding(t[1], snip, 'm')`{{{
${0:${VISUAL}}

`!p snip.rv=commentSymbol(snip)` }}}
endsnippet


#--------------------------------------------------------- Dividers --
snippet divider "Section divider"
`!p line = vim.current.line
lineLen = len(line)
tabs = (lineLen - len(line.lstrip('\t'))) * 2
spaces = lineLen - len(line.lstrip(' '))
symbol = commentSymbol(snip)
if lineLen < 59:
	snip.rv=symbol + ' ' + ((58 - spaces - tabs - len(symbol)) * '*')
`
endsnippet
