
#-- SNIPPET GLOBALS --------------------------------------------------
global !p
from javascript_snippets import (
	semi, space_before_function_paren, keyword_spacing
)
# from js_snippet_helpers import (specialRequire)
from jsSnippetHelpers import (specialRequire)

endglobal

snippet #! "shebang"
#!/usr/bin/env node
endsnippet



#-- REQUIREJS --------------------------------------------------------
#--------------------------------------------------- Require Module --
snippet r "Require module" b
const $2 = require('$1')
endsnippet

snippet 'r\.([a-z,A-Z,0-9,\-,\.]+)' "Require matching name module" br
const `!p snip.rv=specialRequire(match.group(1))`
endsnippet

snippet rd "Require & destruct module" b
const { $2 } = require('$1')
endsnippet

snippet 'rd\.(\w+)' "Require & destruct named module" br
const { $1 } = require('`!p snip.rv=match.group(1)`')
endsnippet


#------------------------------------------- Require Sibling Module --
snippet rs "Require sibling module" b
const $2 = require('./$1')
endsnippet

snippet 'rs\.([a-z,A-Z,\-]+)' "Require matching name sibling module" br
const `!p snip.rv=specialRequire(match.group(1), 'sibling')`
endsnippet

snippet rsd "Require & destruct sibling module" b
const { $2 } = require('./$1')
endsnippet

snippet 'rsd\.(\w+)' "Require & destruct named sibling module" br
const { $2 } = require('./`!p snip.rv=match.group(1)`')
endsnippet

snippet rse "Require sibling export module" b
module.exports = require('./$1')
endsnippet


#-------------------------------------------- Require Parent Module --
snippet rp "Require parent module" b
const $2 = require('../$1')
endsnippet

snippet 'rp\.([a-z,A-Z,\-]+)' "Require matching name parent module" br
const `!p snip.rv=specialRequire(match.group(1), 'parent')`
endsnippet

snippet rpd "Require & destruct parent module" b
const { $2 } = require('../$1')
endsnippet

snippet 'rpd\.(\w+)' "Require & destruct named parent module" br
const { $1 } = require('../`!p snip.rv=match.group(1)`')
endsnippet

snippet rpe "Require parent export module" b
module.exports = require('../$1')
endsnippet


#--------------------------------------------------- Module Exports --
snippet me "Module exports object" b
module.exports = {
	$1
}
endsnippet

snippet 'me\.([a-z,A-Z,\-]+)' "Module exports object value" rb
module.exports = `!p snip.rv=match.group(1)`
endsnippet

snippet med "Module exports default" b
module.exports = $1
endsnippet

snippet mef "Module exports default function" b
module.exports = function $1ModuleExport($2) {

}
endsnippet



#-- PROCESS VARIABLES ------------------------------------------------
snippet pr "process." w
process.$0
endsnippet

snippet pr.a "process.argv." w
process.argv.$0
endsnippet



#-- PROCESS ENV ------------------------------------------------------
snippet pr.e "process.env." w
process.env.$0
endsnippet

snippet pr.ep "process.env.PORT" w
process.env.PORT = ${0:3000}
endsnippet

snippet pr.en "process.env.NODE_ENV" w
process.env.NODE_ENV = ${0:'development'}
endsnippet

snippet pr.muri "process.env.MONGODB_URI" w
process.env.MONGODB_URI = ${0:${VISUAL}}
endsnippet



#-- PROCESS HOOKS ----------------------------------------------------
snippet pr.o "process.on()" w
process.on('$1', function ${2:onProcess}$4($5) {
	${0:${VISUAL}}
})
endsnippet



#-- PROCESS IO -------------------------------------------------------
snippet pr.out "stdout" w
process.stdout.${1:write($2)}
endsnippet

snippet pr.in "stdin" w
process.stdin.$0
endsnippet

snippet pr.std "stderr" w
process.stderr
endsnippet



#-- HTTP -------------------------------------------------------------
snippet hcs "http.createServer"
http.createServer($1).listen($2)$0
endsnippet

snippet ncs "net.createServer"
net.createServer(function(${1:socket}){
	$1.on('data', function(${3:data}){
		$4
	})
	$1.on('end', function(){
		$5
	})
}).listen(${6:8124})
endsnippet

snippet pipe "pipe"
pipe(${1:stream})$2
endsnippet



#-- EXPRESS ----------------------------------------------------------
snippet ex.app "Express app"
const app = express()
endsnippet


#--------------------------------------------- Http Request Methods --
snippet ex.del "Express DELETE"
app.delete('/$1', delete$2Route)

function delete$2Route(req, res) {
	${0:${VISUAL}}
}
endsnippet

snippet ex.get "Express GET"
app.get('/$1', get$2Route)

function get$2Route(req, res) {
	${0:${VISUAL}}
}
endsnippet

snippet ex.pat "Express PATCH"
app.patch('/$1', patch$2Route)

function patch$2Route(req, res) {
	${0:${VISUAL}}
}
endsnippet

snippet ex.post "Express POST"
app.post('/$1', post$2Route)

function post$2Route(req, res) {
	${0:${VISUAL}}
}
endsnippet

snippet ex.put "Express PUT"
app.put('/$1', put$2Route)

function put$2Route(req, res) {
	${0:${VISUAL}}
}
endsnippet


#--------------------------------------------------- Http Responses --
snippet ex.s "Express send"
res.send($1)
endsnippet

snippet ex.stat "Express status send"
res.status(${1:400}).send($2)
endsnippet

snippet ex.r "Express render"
res.render('$1.hbs', {
	$2: $3,$0
})
endsnippet


#------------------------------------------------------- Middleware --
snippet ex.mf "Express middleware function" b
const $1 = function $1CB(req, res, next) {
	${0:${VISUAL}}

	next()
}
endsnippet

snippet ex.use "app.use('middleware')" b
app.use(${1:function ${2:functionName}(req, res, next) {
	$0
	${3:next()}
}})
endsnippet


#-------------------------------------------------------- Functions --
snippet ex.f "Express function" iA
function $1CB(req, res) {
	${0:${VISUAL}}
}
endsnippet


snippet ex.listen "app.listen" b
app.listen(${1:3000}, function appListenCB() {
	console.log('Server is listening on port $1')
})
endsnippet


#----------------------------------------------------- Boilerplates --
snippet ex.pb "Express server boilerplate" b
const express = require('express')


const app = express()

app.get('/$1', (req, res) => {
	res.${2:send}($3)
})


app.listen(${4:3000}, () => {
	console.log('Server listening on port $4')
})
endsnippet
